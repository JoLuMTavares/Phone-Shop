{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/reactjs/quiz/src/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import reducer from './reducer';\n// Just created context and they will provide : Provider and Consumer\n\nvar Context = React.createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'NEXT_QUESTION':\n      if (action.passed === true) return {\n        passed: false,\n        answered: false,\n        option: '',\n        currentIndex: state.currentIndex + 1\n      };else return {\n        answered: false,\n        option: '',\n        currentIndex: state.currentIndex + 1\n      };\n\n    case 'CHECK_ANSWER':\n      if (parseInt(action.chosenOpt) === parseInt(action.theRightOne)) return {\n        passed: true,\n        answered: true,\n        rightAnswers: state.rightAnswers + 1,\n        option: action.chosenOpt\n      };else return {\n        answered: true,\n        option: action.chosenOpt\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport var Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Provider, _Component);\n\n  function Provider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Provider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      groups: [{\n        id: '',\n        question: '',\n        answer1: '',\n        answer2: '',\n        answer3: '',\n        right: '',\n        congrats: '',\n        reaction: ''\n      }],\n      option: '',\n      currentIndex: 0,\n      rightAnswers: 0,\n      wrongAnswers: 0,\n      finalResult: 0,\n      finalVeridict: {\n        id: 0,\n        veridict: ''\n      },\n      passed: false,\n      answered: false,\n      completed: false,\n      dispatch: function dispatch(action) {\n        _this.setState(function (state) {\n          return reducer(state, action);\n        });\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get('http://localhost:1024/loadquiz');\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n                this.setState({\n                  groups: response.data.quiz\n                }); // console.log(this.state.groups);\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n    /* \n     When the last question is answered and the\n     user did press the nex button, this will act. It will\n     calculate the percentage of success. Based on that,\n     it will load the right veridict. This will be shown to the user.\n    */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var calculation, choice, difference, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.state.currentIndex === 14)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                // Getting the result of the quiz. This will be shonw as a percentage\n                calculation = Math.round(this.stage.rightAnswers / 15 * 100, 2);\n                choice = 0; // Now all the conditions to apply the right value to the choice.\n\n                if (calculation > 0 && calculation < 25) choice = 1;else if (calculation >= 25 && calculation < 35) choice = 2;else if (calculation >= 35 && calculation < 45) choice = 3;else if (calculation >= 45 && calculation < 56, 5) choice = 4;else if (calculation >= 56, 5 && calculation < 73) choice = 5;else if (calculation >= 73 && calculation < 80) choice = 6;else if (calculation >= 80 && calculation < 95) choice = 7;else if (calculation >= 95 && calculation < 100) choice = 8;else choice = 9;\n                difference = 15 - this.stage.rightAnswers;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return axios.get('http://localhost:1024/loadveridict/' + choice);\n\n              case 8:\n                response = _context2.sent;\n                console.log(response);\n                this.setState({\n                  finalVeridict: response.data.evaluation,\n                  completed: true,\n                  wrongAnswers: difference,\n                  finalResult: calculation\n                });\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](5);\n                console.log(_context2.t0);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 13]]);\n      }));\n\n      return function componentDidUpdate() {\n        return _componentDidUpdate.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Context.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return Provider;\n}(Component);\nexport var Consumer = Context.Consumer;","map":{"version":3,"sources":["/home/devugees/Desktop/reactjs/quiz/src/Context.js"],"names":["React","Component","axios","Context","createContext","reducer","state","action","type","passed","answered","option","currentIndex","parseInt","chosenOpt","theRightOne","rightAnswers","Provider","groups","id","question","answer1","answer2","answer3","right","congrats","reaction","wrongAnswers","finalResult","finalVeridict","veridict","completed","dispatch","setState","get","response","console","log","data","quiz","calculation","Math","round","stage","choice","difference","evaluation","props","children","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import reducer from './reducer';\n\n// Just created context and they will provide : Provider and Consumer\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'NEXT_QUESTION':\n      if (action.passed === true)\n        return {\n          passed: false,\n          answered: false,\n          option: '',\n          currentIndex: state.currentIndex + 1\n        };\n      else\n        return {\n          answered: false,\n          option: '',\n          currentIndex: state.currentIndex + 1\n        };\n    case 'CHECK_ANSWER':\n      if (parseInt(action.chosenOpt) === parseInt(action.theRightOne))\n        return {\n          passed: true,\n          answered: true,\n          rightAnswers: state.rightAnswers + 1,\n          option: action.chosenOpt\n        };\n      else\n        return {\n          answered: true,\n          option: action.chosenOpt\n        };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    groups: [\n      {\n        id: '',\n        question: '',\n        answer1: '',\n        answer2: '',\n        answer3: '',\n        right: '',\n        congrats: '',\n        reaction: ''\n      }\n    ],\n    option: '',\n    currentIndex: 0,\n    rightAnswers: 0,\n    wrongAnswers: 0,\n    finalResult: 0,\n    finalVeridict: {\n      id: 0,\n      veridict: ''\n    },\n    passed: false,\n    answered: false,\n    completed: false,\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get('http://localhost:1024/loadquiz');\n      console.log(response);\n\n      this.setState({\n        groups: response.data.quiz\n      });\n      // console.log(this.state.groups);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* \n   When the last question is answered and the\n   user did press the nex button, this will act. It will\n   calculate the percentage of success. Based on that,\n   it will load the right veridict. This will be shown to the user.\n*/\n  async componentDidUpdate() {\n    // Checking if the last question was answered\n    if (this.state.currentIndex === 14) {\n      // Getting the result of the quiz. This will be shonw as a percentage\n      let calculation = Math.round((this.stage.rightAnswers / 15) * 100, 2);\n      let choice = 0;\n      // Now all the conditions to apply the right value to the choice.\n      if (calculation > 0 && calculation < 25) choice = 1;\n      else if (calculation >= 25 && calculation < 35) choice = 2;\n      else if (calculation >= 35 && calculation < 45) choice = 3;\n      else if ((calculation >= 45 && calculation < 56, 5)) choice = 4;\n      else if ((calculation >= 56, 5 && calculation < 73)) choice = 5;\n      else if (calculation >= 73 && calculation < 80) choice = 6;\n      else if (calculation >= 80 && calculation < 95) choice = 7;\n      else if (calculation >= 95 && calculation < 100) choice = 8;\n      else choice = 9;\n\n      let difference = 15 - this.stage.rightAnswers;\n\n      try {\n        // Sending the request with the choice as the identifier for the veridict\n        const response = await axios.get(\n          'http://localhost:1024/loadveridict/' + choice\n        );\n        console.log(response);\n\n        this.setState({\n          finalVeridict: response.data.evaluation,\n          completed: true,\n          wrongAnswers: difference,\n          finalResult: calculation\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    /* else {\n      let cIndex = this.state.currentIndex + 1;\n      console.log(cIndex);\n      this.setState({\n        currentIndex: cIndex\n      });\n    }*/\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n"]},"metadata":{},"sourceType":"module"}