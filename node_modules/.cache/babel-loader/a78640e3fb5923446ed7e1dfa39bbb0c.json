{"ast":null,"code":"import _defineProperty from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/reactjs/phone_shop/src/components/Shopping.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap'; // JSX\n\nvar Shopping =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shopping, _Component);\n\n  // All the variables needed\n  // Constructor\n  function Shopping(props) {\n    var _this;\n\n    _classCallCheck(this, Shopping);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Shopping).call(this, props));\n    _this.state = {\n      number: 0,\n      // registering the number of phones inserted by the input\n      bought: 0,\n      // number of bought phones\n      price: 0,\n      // registering the price inserted by the input\n      totalPhones: 0,\n      // Number of bought phones on the submit\n      total: 0,\n      // Total calculated by the bought phones on the submit\n      tax: 0,\n      // Tax value resulted from the total above\n      totalVat: 0,\n      // Total with the tax included\n      fullTotal: 0,\n      // Total of all shops made\n      balance: 10000 // Account balance. It starts with this value\n\n    };\n\n    _this.updateInformation = function (event) {\n      event.preventDefault(); // Prevents page from reload\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.makeCalculation = function (event) {\n      event.preventDefault();\n      var totalBCalc = parseFloat(_this.state.number) * parseFloat(_this.state.price);\n      var total = totalBCalc.toFixed(2);\n      var tax = parseFloat(total * 0.23);\n      var taxFixed2 = tax.toFixed(2);\n      var newBalance = parseFloat(_this.state.balance - total + tax).toFixed(2);\n      var totalCalc = parseFloat(total) + parseFloat(taxFixed2);\n      var totalVat = totalCalc.toFixed(2);\n      var fullTotalCalc = parseFloat(_this.state.totalVat) + parseFloat(totalVat);\n      var fullTotal = fullTotalCalc.toFixed(2);\n\n      if (newBalance < 0) {\n        alert('Out of balance! You cannot buy more phones.');\n      } else {\n        _this.setState({\n          bought: _this.state.number,\n          totalPhones: _this.state.totalPhones + parseInt(_this.state.number),\n          total: total,\n          tax: taxFixed2,\n          totalVat: totalVat,\n          fullTotal: fullTotal,\n          balance: newBalance\n        });\n      }\n    };\n\n    _this.number = React.createRef();\n    _this.price = React.createRef();\n    return _this;\n  } // This function registers the values inserted by the name identification\n\n\n  _createClass(Shopping, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Shopping\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Number of Phones\", React.createElement(Input, {\n        type: \"number\",\n        name: \"number\",\n        min: \"0\",\n        placeholder: \"0\",\n        onChange: this.updateInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), ' ')), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Price\", React.createElement(Input, {\n        type: \"number\",\n        name: \"price\",\n        min: \"0\",\n        step: \"0.01\",\n        placeholder: \"0.00\",\n        onChange: this.updateInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), ' ')), ' ', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.makeCalculation(e);\n        },\n        title: \"Buy Phone(s)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Buy Phone(s)\"))))), React.createElement(\"div\", {\n        className: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Number of bought Phones: \", this.state.bought), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Total Number of bought Phones: \", this.state.totalPhones), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Total Spent: \", this.state.total, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Tax Rate: 23%\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"VAT: \", this.state.tax, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Total (including taxes): \", this.state.totalVat, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Full Total (shopping history): \", this.state.fullTotal, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Account Balance: \", this.state.balance, \" \\u20AC\")));\n    }\n  }]);\n\n  return Shopping;\n}(Component);\n\nexport default Shopping;","map":{"version":3,"sources":["/home/devugees/Desktop/reactjs/phone_shop/src/components/Shopping.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Shopping","props","state","number","bought","price","totalPhones","total","tax","totalVat","fullTotal","balance","updateInformation","event","preventDefault","setState","target","name","value","makeCalculation","totalBCalc","parseFloat","toFixed","taxFixed2","newBalance","totalCalc","fullTotalCalc","alert","parseInt","createRef","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n// JSX\nclass Shopping extends Component {\n  // All the variables needed\n  state = {\n    number: 0, // registering the number of phones inserted by the input\n    bought: 0, // number of bought phones\n    price: 0, // registering the price inserted by the input\n    totalPhones: 0, // Number of bought phones on the submit\n    total: 0, // Total calculated by the bought phones on the submit\n    tax: 0, // Tax value resulted from the total above\n    totalVat: 0, // Total with the tax included\n    fullTotal: 0, // Total of all shops made\n    balance: 10000 // Account balance. It starts with this value\n  };\n\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    this.number = React.createRef();\n    this.price = React.createRef();\n  }\n\n  // This function registers the values inserted by the name identification\n  updateInformation = event => {\n    event.preventDefault(); // Prevents page from reload\n\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  /* The function makes the calculation each time the submit is pressed. \n      The total is calculated just by multiplying the number of bought phones\n      for the price (which is the same for all each time is inserted).\n      The tax is calculated by multiplying the total \n  */\n  makeCalculation = event => {\n    event.preventDefault();\n\n    let totalBCalc =\n      parseFloat(this.state.number) * parseFloat(this.state.price);\n    let total = totalBCalc.toFixed(2);\n\n    let tax = parseFloat(total * 0.23);\n    let taxFixed2 = tax.toFixed(2);\n\n    let newBalance = parseFloat(this.state.balance - total + tax).toFixed(2);\n\n    let totalCalc = parseFloat(total) + parseFloat(taxFixed2);\n    let totalVat = totalCalc.toFixed(2);\n\n    let fullTotalCalc = parseFloat(this.state.totalVat) + parseFloat(totalVat);\n    let fullTotal = fullTotalCalc.toFixed(2);\n\n    if (newBalance < 0) {\n      alert('Out of balance! You cannot buy more phones.');\n    } else {\n      this.setState({\n        bought: this.state.number,\n        totalPhones: this.state.totalPhones + parseInt(this.state.number),\n        total: total,\n        tax: taxFixed2,\n        totalVat: totalVat,\n        fullTotal: fullTotal,\n        balance: newBalance\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Shopping\">\n        <div>\n          <Form>\n            <FormGroup tag=\"fieldset\">\n              <FormGroup check>\n                <Label check>\n                  Number of Phones\n                  <Input\n                    type=\"number\"\n                    name=\"number\"\n                    min=\"0\"\n                    placeholder=\"0\"\n                    onChange={this.updateInformation}\n                  />{' '}\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  Price\n                  <Input\n                    type=\"number\"\n                    name=\"price\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    placeholder=\"0.00\"\n                    onChange={this.updateInformation}\n                  />{' '}\n                </Label>\n              </FormGroup>{' '}\n              <br />\n              <FormGroup check>\n                <Button\n                  onClick={e => this.makeCalculation(e)}\n                  title=\"Buy Phone(s)\"\n                >\n                  Buy Phone(s)\n                </Button>\n              </FormGroup>\n            </FormGroup>\n          </Form>\n        </div>\n        <div className=\"Status\">\n          <br />\n          <p>Number of bought Phones: {this.state.bought}</p>\n          <p>Total Number of bought Phones: {this.state.totalPhones}</p>\n          <p>Total Spent: {this.state.total} €</p>\n\n          <p>Tax Rate: 23%</p>\n\n          <p>VAT: {this.state.tax} €</p>\n\n          <p>Total (including taxes): {this.state.totalVat} €</p>\n\n          <p>Full Total (shopping history): {this.state.fullTotal} €</p>\n\n          <p>Account Balance: {this.state.balance} €</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shopping;\n"]},"metadata":{},"sourceType":"module"}