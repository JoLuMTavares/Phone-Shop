{"ast":null,"code":"import _defineProperty from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/reactjs/phone_shop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/reactjs/phone_shop/src/components/Shopping.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap'; // JSX\n\nvar Shopping =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shopping, _Component);\n\n  // Two variables. One have true when the user answered.\n  // The second one works as a switch between right and wrong answers\n  function Shopping(props) {\n    var _this;\n\n    _classCallCheck(this, Shopping);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Shopping).call(this, props));\n    _this.state = {\n      number: 0,\n      price: 0,\n      totalPhones: 0,\n      total: 0,\n      tax: 0,\n      totalVat: 0,\n      balance: 10000\n    };\n\n    _this.updateInformation = function (event) {\n      event.preventDefault(); // Prevents page from reload\n      // if (!element.empty && element.complete)\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.makeCalculation = function (event) {\n      event.preventDefault();\n\n      var total = (_this.state.total + _this.state.number * _this.state.price).toFixed(2);\n\n      var tax = (total * 0.23).toFixed(2);\n      var newBalance = _this.state.balance - (total + tax);\n      var fullTotal = _this.state.totalVat + parseFloat(total + tax);\n\n      if (newBalance < 0) {\n        alert('Out of balance! You cannot buy more phones.');\n      } else {\n        _this.setState({\n          totalPhones: _this.state.totalPhones + parseInt(_this.state.number),\n          total: total,\n          tax: _this.state.tax + parseFloat(tax),\n          totalVat: fullTotal,\n          balance: newBalance\n        });\n      }\n    };\n\n    _this.number = React.createRef();\n    _this.price = React.createRef();\n    return _this;\n  } // This function\n\n\n  _createClass(Shopping, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Shopping\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Number of Phones\", React.createElement(Input, {\n        type: \"number\",\n        name: \"number\",\n        min: \"0\",\n        placeholder: \"0\",\n        onChange: this.updateInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), ' ')), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Price\", React.createElement(Input, {\n        type: \"number\",\n        name: \"price\",\n        min: \"0\",\n        step: \"0.01\",\n        placeholder: \"0.00\",\n        onChange: this.updateInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), ' ')), ' ', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this2.makeCalculation(e);\n        },\n        title: \"Buy Phone(s)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Buy Phone(s)\"))))), React.createElement(\"div\", {\n        className: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Number of Phones: \", this.state.totalPhones), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Total Spent: \", this.state.total, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Tax Rate: 23%\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"VAT: \", this.state.tax, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Total (including taxes): \", this.state.totalVat, \" \\u20AC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Account Balance: \", this.state.balance, \" \\u20AC\")));\n    }\n  }]);\n\n  return Shopping;\n}(Component);\n\nexport default Shopping;","map":{"version":3,"sources":["/home/devugees/Desktop/reactjs/phone_shop/src/components/Shopping.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Shopping","props","state","number","price","totalPhones","total","tax","totalVat","balance","updateInformation","event","preventDefault","setState","target","name","value","makeCalculation","toFixed","newBalance","fullTotal","parseFloat","alert","parseInt","createRef","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n// JSX\nclass Shopping extends Component {\n  // Two variables. One have true when the user answered.\n  // The second one works as a switch between right and wrong answers\n  state = {\n    number: 0,\n    price: 0,\n    totalPhones: 0,\n    total: 0,\n    tax: 0,\n    totalVat: 0,\n    balance: 10000\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.number = React.createRef();\n    this.price = React.createRef();\n  }\n\n  // This function\n  updateInformation = event => {\n    event.preventDefault(); // Prevents page from reload\n    // if (!element.empty && element.complete)\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  makeCalculation = event => {\n    event.preventDefault();\n\n    let total = (\n      this.state.total +\n      this.state.number * this.state.price\n    ).toFixed(2);\n    let tax = (total * 0.23).toFixed(2);\n    let newBalance = this.state.balance - (total + tax);\n    let fullTotal = this.state.totalVat + parseFloat(total + tax);\n    if (newBalance < 0) {\n      alert('Out of balance! You cannot buy more phones.');\n    } else {\n      this.setState({\n        totalPhones: this.state.totalPhones + parseInt(this.state.number),\n        total: total,\n        tax: this.state.tax + parseFloat(tax),\n        totalVat: fullTotal,\n        balance: newBalance\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Shopping\">\n        <div>\n          <Form>\n            <FormGroup tag=\"fieldset\">\n              <FormGroup check>\n                <Label check>\n                  Number of Phones\n                  <Input\n                    type=\"number\"\n                    name=\"number\"\n                    min=\"0\"\n                    placeholder=\"0\"\n                    onChange={this.updateInformation}\n                  />{' '}\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  Price\n                  <Input\n                    type=\"number\"\n                    name=\"price\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    placeholder=\"0.00\"\n                    onChange={this.updateInformation}\n                  />{' '}\n                </Label>\n              </FormGroup>{' '}\n              <br />\n              <FormGroup check>\n                <Button\n                  onClick={e => this.makeCalculation(e)}\n                  title=\"Buy Phone(s)\"\n                >\n                  Buy Phone(s)\n                </Button>\n              </FormGroup>\n            </FormGroup>\n          </Form>\n        </div>\n        <div className=\"Status\">\n          <br />\n          <p>Number of Phones: {this.state.totalPhones}</p>\n          <p>Total Spent: {this.state.total} €</p>\n\n          <p>Tax Rate: 23%</p>\n\n          <p>VAT: {this.state.tax} €</p>\n\n          <p>Total (including taxes): {this.state.totalVat} €</p>\n\n          <p>Account Balance: {this.state.balance} €</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shopping;\n"]},"metadata":{},"sourceType":"module"}