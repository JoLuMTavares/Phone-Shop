{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/devugees/Desktop/react/ajax_4/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/devugees/Desktop/react/ajax_4/node_modules/@babel/runtime/helpers/createClass\");\n\nvar HookMap =\n/*#__PURE__*/\nfunction () {\n  function HookMap(factory) {\n    _classCallCheck(this, HookMap);\n\n    this._map = new Map();\n    this._factory = factory;\n    this._interceptors = [];\n  }\n\n  _createClass(HookMap, [{\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(key);\n    }\n  }, {\n    key: \"for\",\n    value: function _for(key) {\n      var hook = this.get(key);\n\n      if (hook !== undefined) {\n        return hook;\n      }\n\n      var newHook = this._factory(key);\n\n      var interceptors = this._interceptors;\n\n      for (var i = 0; i < interceptors.length; i++) {\n        newHook = interceptors[i].factory(key, newHook);\n      }\n\n      this._map.set(key, newHook);\n\n      return newHook;\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(interceptor) {\n      this._interceptors.push(Object.assign({\n        factory: function factory(key, hook) {\n          return hook;\n        }\n      }, interceptor));\n    }\n  }, {\n    key: \"tap\",\n    value: function tap(key, options, fn) {\n      return this.for(key).tap(options, fn);\n    }\n  }, {\n    key: \"tapAsync\",\n    value: function tapAsync(key, options, fn) {\n      return this.for(key).tapAsync(options, fn);\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise(key, options, fn) {\n      return this.for(key).tapPromise(options, fn);\n    }\n  }]);\n\n  return HookMap;\n}();\n\nmodule.exports = HookMap;","map":null,"metadata":{},"sourceType":"script"}