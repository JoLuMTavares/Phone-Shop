{"ast":null,"code":"import _classCallCheck from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/reactjs/quiz/src/components/Group.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Consumer } from '../Context';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap'; // JSX\n\nvar Group =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Group, _Component);\n\n  function Group() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Group)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checkedOption: 0,\n      answered: false,\n      passed: false\n    };\n\n    _this.updateInformation = function (event) {\n      event.preventDefault(); // Prevents page from reload\n      // if (!element.empty && element.complete)\n\n      _this.setState({\n        checkedOption: event.target.value\n      });\n    };\n\n    _this.showResult = function (rightAnswer) {\n      // event.preventDefault();\n      // let selected = this.state.checkedOption\n      if (parseInt(_this.state.checkedOption) === parseInt(rightAnswer)) {\n        _this.setState({\n          passed: true\n        });\n      }\n\n      _this.setState({\n        answered: true\n      });\n    };\n\n    _this.resetOptions = function () {\n      _this.setState({\n        // passed: false,\n        // answered: false,\n        checkedOption: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /*  const {\n        id,\n        image,\n        question,\n        answer1,\n        answer2,\n        answer3,\n        right,\n        congrats,\n        reaction\n      } = this.props.group;*/\n\n      /*\n      let imageHeader = {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      };\n       let buttonStyle = {\n        borderRadius: '3px',\n        backgroundColor: '#e33',\n        color: 'white',\n        width: '36px',\n        height: '36px',\n        boxShadow:\n          '0 4px 8px 0 rgba(128, 98, 31, 0.2), 0 6px 20px 0 rgba(128, 98, 31, 0.19)',\n        fontSize: '1.0em',\n         cursor: 'pointer'\n      };\n      */\n      return React.createElement(Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, function (content) {\n        console.log(content);\n        var index = content.currentIndex;\n        var _content$groups$index = content.groups[index],\n            id = _content$groups$index.id,\n            image = _content$groups$index.image,\n            question = _content$groups$index.question,\n            answer1 = _content$groups$index.answer1,\n            answer2 = _content$groups$index.answer2,\n            answer3 = _content$groups$index.answer3,\n            right = _content$groups$index.right,\n            congrats = _content$groups$index.congrats,\n            reaction = _content$groups$index.reaction;\n        var rightAnswers = content.rightAnswers;\n        console.log(rightAnswers);\n        var option = content.option; // console.log(content);\n\n        return React.createElement(\"div\", {\n          className: \"Group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"image-Block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"figure\", {\n          className: \"image-Thumb ml-4 mr-4 p-2 col-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"scenario\",\n          src: '/images/' + image,\n          alt: \"\" // style={{ cursor: 'pointer' }}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }))), React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          tag: \"fieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"legend\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, question), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          value: \"1\",\n          checked: _this2.state.checkedOption === '1',\n          onChange: _this2.updateInformation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), ' ', answer1)), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio2\",\n          value: \"2\",\n          checked: _this2.state.checkedOption === '2',\n          onChange: _this2.updateInformation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), ' ', answer2)), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio3\",\n          value: \"3\",\n          checked: _this2.state.checkedOption === '3',\n          onChange: _this2.updateInformation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), ' ', answer3))), _this2.state.answered === true ? _this2.state.passed === true ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, congrats) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, reaction) : null, ' ', _this2.state.answered === false ? React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.showResult(right);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Submit\") : // <Button\n        //   onClick={() =>\n        //     this.props.nextGroupHandler(this.state.passed)\n        //   }\n        // >\n        //   Next\n        // </Button>\n        React.createElement(Button, {\n          onClick: (function () {\n            return content.dispatch({\n              type: 'NEXT_QUESTION',\n              passed: _this2.state.passed\n            });\n          }, _this2.resetOptions),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Next\")));\n      });\n    }\n  }]);\n\n  return Group;\n}(Component);\n/*\nGroup.propTypes = {\n  group: propTypes.object.isRequired\n};\n*/\n\n\nexport default Group;","map":{"version":3,"sources":["/home/devugees/Desktop/reactjs/quiz/src/components/Group.js"],"names":["React","Component","propTypes","Consumer","axios","Button","Form","FormGroup","Label","Input","FormText","Group","state","checkedOption","answered","passed","updateInformation","event","preventDefault","setState","target","value","showResult","rightAnswer","parseInt","resetOptions","content","console","log","index","currentIndex","groups","id","image","question","answer1","answer2","answer3","right","congrats","reaction","rightAnswers","option","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Consumer } from '../Context';\nimport axios from 'axios';\n\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\n// JSX\nclass Group extends Component {\n  // Two variables. One have true when the user answered.\n  // The second one works as a switch between right and wrong answers\n  state = {\n    checkedOption: 0,\n    answered: false,\n    passed: false\n  };\n\n  // This function\n  updateInformation = event => {\n    event.preventDefault(); // Prevents page from reload\n    // if (!element.empty && element.complete)\n    this.setState({\n      checkedOption: event.target.value\n    });\n  };\n\n  /* This function verifies if the user chose the right answer.\n     If so, the \"passed\" variable is updated to \"true\". This way \n     the greetings are shown. If not, the notification of\n     wrong answer must come out.\n     Also the variable \"answered\" must be set to true,\n     so the user can see the result of the made choice.\n  */\n  showResult = rightAnswer => {\n    // event.preventDefault();\n\n    // let selected = this.state.checkedOption\n\n    if (parseInt(this.state.checkedOption) === parseInt(rightAnswer)) {\n      this.setState({\n        passed: true\n      });\n    }\n\n    this.setState({\n      answered: true\n    });\n  };\n\n  resetOptions = () => {\n    this.setState({\n      // passed: false,\n      // answered: false,\n      checkedOption: ''\n    });\n  };\n\n  render() {\n    /*  const {\n      id,\n      image,\n      question,\n      answer1,\n      answer2,\n      answer3,\n      right,\n      congrats,\n      reaction\n    } = this.props.group;*/\n    /*\n    let imageHeader = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    };\n\n    let buttonStyle = {\n      borderRadius: '3px',\n      backgroundColor: '#e33',\n      color: 'white',\n      width: '36px',\n      height: '36px',\n      boxShadow:\n        '0 4px 8px 0 rgba(128, 98, 31, 0.2), 0 6px 20px 0 rgba(128, 98, 31, 0.19)',\n      fontSize: '1.0em',\n\n      cursor: 'pointer'\n    };\n*/\n    return (\n      <Consumer>\n        {content => {\n          console.log(content);\n          let index = content.currentIndex;\n          const {\n            id,\n            image,\n            question,\n            answer1,\n            answer2,\n            answer3,\n            right,\n            congrats,\n            reaction\n          } = content.groups[index];\n          let rightAnswers = content.rightAnswers;\n          console.log(rightAnswers);\n          let option = content.option;\n\n          // console.log(content);\n          return (\n            <div className=\"Group\">\n              <div className=\"image-Block\">\n                <figure className=\"image-Thumb ml-4 mr-4 p-2 col-sm\">\n                  <img\n                    className=\"scenario\"\n                    src={'/images/' + image}\n                    alt=\"\"\n                    // style={{ cursor: 'pointer' }}\n                  />\n                </figure>\n              </div>\n              <Form>\n                <FormGroup tag=\"fieldset\">\n                  <legend>{question}</legend>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio1\"\n                        value=\"1\"\n                        checked={this.state.checkedOption === '1'}\n                        onChange={this.updateInformation}\n                      />{' '}\n                      {answer1}\n                    </Label>\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio2\"\n                        value=\"2\"\n                        checked={this.state.checkedOption === '2'}\n                        onChange={this.updateInformation}\n                      />{' '}\n                      {answer2}\n                    </Label>\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio3\"\n                        value=\"3\"\n                        checked={this.state.checkedOption === '3'}\n                        onChange={this.updateInformation}\n                      />{' '}\n                      {answer3}\n                    </Label>\n                  </FormGroup>\n                </FormGroup>\n                {this.state.answered === true ? (\n                  this.state.passed === true ? (\n                    <p>{congrats}</p>\n                  ) : (\n                    <p>{reaction}</p>\n                  )\n                ) : null}{' '}\n                {this.state.answered === false ? (\n                  <Button onClick={() => this.showResult(right)}>Submit</Button>\n                ) : (\n                  // <Button\n                  //   onClick={() =>\n                  //     this.props.nextGroupHandler(this.state.passed)\n                  //   }\n                  // >\n                  //   Next\n                  // </Button>\n                  <Button\n                    onClick={\n                      (() =>\n                        content.dispatch({\n                          type: 'NEXT_QUESTION',\n                          passed: this.state.passed\n                        }),\n                      this.resetOptions)\n                    }\n                  >\n                    Next\n                  </Button>\n                )}\n              </Form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n/*\nGroup.propTypes = {\n  group: propTypes.object.isRequired\n};\n*/\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}