{"ast":null,"code":"import _toConsumableArray from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/reactjs/quiz/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/reactjs/quiz/src/components/Quiz.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Group from './Group';\nimport { Consumer } from '../Context';\nimport Veridict from '../pages/Veridict'; // JSX\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quiz).call(this, props));\n    _this.state = {\n      currentIndex: '',\n      rightAnswers: 0,\n      wrongAnswers: '',\n      finalResult: '',\n      finalVeridict: {\n        id: 0,\n        veridict: ''\n      },\n      completed: false\n    };\n    _this.state.currentIndex = 0;\n    _this.state.rightAnswers = 0;\n    _this.state.wrongAnswers = 0;\n    _this.state.finalResult = 0;\n    return _this;\n  }\n  /* This function handles the each group of the quiz.\n      Each time the next button is pressed, the current\n      Index of the question is updated. This goes until\n      the last one.\n   */\n\n\n  _createClass(Quiz, [{\n    key: \"handleNextBlock\",\n    value: function handleNextBlock(passed, event) {\n      // event.preventDefault();\n      if (passed) {\n        var rightAnswers = _toConsumableArray(this.state.rightAnswers);\n\n        var value = rightAnswers + 1;\n        console.log(value);\n        this.setState({\n          rightAnswers: value\n        });\n      }\n\n      this.setState({\n        currentIndex: this.currentIndex + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, function (content) {\n        var groups = content.groups; // console.log(groups);\n\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"main-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Group // key={groups[this.state.currentIndex].id}\n        // id={groups[this.state.currentIndex].id}\n        // image={groups[this.state.currentIndex].image}\n        // question={groups[this.state.currentIndex].question}\n        // group={groups[this.state.currentIndex]}\n        // nextGroupHandler={this.handleNextBlock}\n        , {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"end-page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, _this2.state.finalResult !== 0 ? React.createElement(Veridict, {\n          key: \"1\",\n          id: \"1\",\n          rightAnswers: _this2.state.rightAnswers,\n          wrongAnswers: _this2.state.wrongAnswers,\n          finalResult: _this2.state.finalResult,\n          veridict: _this2.state.finalVeridict.veridict,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }) : null));\n      });\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["/home/devugees/Desktop/reactjs/quiz/src/components/Quiz.js"],"names":["React","Component","axios","Group","Consumer","Veridict","Quiz","props","state","currentIndex","rightAnswers","wrongAnswers","finalResult","finalVeridict","id","veridict","completed","passed","event","value","console","log","setState","content","groups"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;IAEMC,I;;;;;AAaJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AADiB,UAZnBC,KAYmB,GAZX;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,YAAY,EAAE,EAHR;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,aAAa,EAAE;AACbC,QAAAA,EAAE,EAAE,CADS;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OALT;AASNC,MAAAA,SAAS,EAAE;AATL,KAYW;AAEjB,UAAKR,KAAL,CAAWC,YAAX,GAA0B,CAA1B;AACA,UAAKD,KAAL,CAAWE,YAAX,GAA0B,CAA1B;AACA,UAAKF,KAAL,CAAWG,YAAX,GAA0B,CAA1B;AACA,UAAKH,KAAL,CAAWI,WAAX,GAAyB,CAAzB;AALiB;AAMlB;AAED;;;;;;;;;oCAKgBK,M,EAAQC,K,EAAO;AAC7B;AACA,UAAID,MAAJ,EAAY;AACV,YAAMP,YAAY,sBAAO,KAAKF,KAAL,CAAWE,YAAlB,CAAlB;;AACA,YAAIS,KAAK,GAAGT,YAAY,GAAG,CAA3B;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKG,QAAL,CAAc;AACZZ,UAAAA,YAAY,EAAES;AADF,SAAd;AAGD;;AAED,WAAKG,QAAL,CAAc;AACZb,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AADtB,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAc,OAAO,EAAI;AACV,YAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB,CADU,CAEV;;AACA,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJF,EAcE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAI,CAAChB,KAAL,CAAWI,WAAX,KAA2B,CAA3B,GACC,oBAAC,QAAD;AACE,UAAA,GAAG,EAAC,GADN;AAEE,UAAA,EAAE,EAAC,GAFL;AAGE,UAAA,YAAY,EAAE,MAAI,CAACJ,KAAL,CAAWE,YAH3B;AAIE,UAAA,YAAY,EAAE,MAAI,CAACF,KAAL,CAAWG,YAJ3B;AAKE,UAAA,WAAW,EAAE,MAAI,CAACH,KAAL,CAAWI,WAL1B;AAME,UAAA,QAAQ,EAAE,MAAI,CAACJ,KAAL,CAAWK,aAAX,CAAyBE,QANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GASG,IAVN,CAdF,CADF;AA6BD,OAjCH,CADF;AAqCD;;;;EAhFgBd,S;;AAmFnB,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nimport Group from './Group';\nimport { Consumer } from '../Context';\n\nimport Veridict from '../pages/Veridict';\n\n// JSX\n\nclass Quiz extends Component {\n  state = {\n    currentIndex: '',\n    rightAnswers: 0,\n    wrongAnswers: '',\n    finalResult: '',\n    finalVeridict: {\n      id: 0,\n      veridict: ''\n    },\n    completed: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state.currentIndex = 0;\n    this.state.rightAnswers = 0;\n    this.state.wrongAnswers = 0;\n    this.state.finalResult = 0;\n  }\n\n  /* This function handles the each group of the quiz.\n      Each time the next button is pressed, the current\n      Index of the question is updated. This goes until\n      the last one.\n   */\n  handleNextBlock(passed, event) {\n    // event.preventDefault();\n    if (passed) {\n      const rightAnswers = [...this.state.rightAnswers];\n      let value = rightAnswers + 1;\n      console.log(value);\n      this.setState({\n        rightAnswers: value\n      });\n    }\n\n    this.setState({\n      currentIndex: this.currentIndex + 1\n    });\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {content => {\n          let groups = content.groups;\n          // console.log(groups);\n          return (\n            <React.Fragment>\n              {/* <h1 className=\"display-5 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1> */}\n              <div className=\"main-column\">\n                <Group\n                // key={groups[this.state.currentIndex].id}\n                // id={groups[this.state.currentIndex].id}\n                // image={groups[this.state.currentIndex].image}\n                // question={groups[this.state.currentIndex].question}\n                // group={groups[this.state.currentIndex]}\n                // nextGroupHandler={this.handleNextBlock}\n                />\n              </div>\n              <div className=\"end-page\">\n                {this.state.finalResult !== 0 ? (\n                  <Veridict\n                    key=\"1\"\n                    id=\"1\"\n                    rightAnswers={this.state.rightAnswers}\n                    wrongAnswers={this.state.wrongAnswers}\n                    finalResult={this.state.finalResult}\n                    veridict={this.state.finalVeridict.veridict}\n                  />\n                ) : null}\n              </div>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}